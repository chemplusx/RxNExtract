[metadata]
name = chemistry-llm-inference
version = 1.0.0
author = Your Organization
author_email = contact@your-org.com
description = Professional chemistry reaction extraction using fine-tuned LLMs
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/your-org/chemistry-llm-inference
project_urls =
    Bug Reports = https://github.com/your-org/chemistry-llm-inference/issues
    Source = https://github.com/your-org/chemistry-llm-inference
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Science/Research
    Topic :: Scientific/Engineering :: Chemistry
    License :: OSI Approved :: MIT License
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11

[options]
package_dir =
    = src
packages = find:
python_requires = >=3.8
install_requires =
    torch>=2.0.0
    transformers>=4.35.0
    peft>=0.7.0
    bitsandbytes>=0.41.0
    accelerate>=0.24.0
    numpy>=1.21.0
    pandas>=1.3.0
    pyyaml>=6.0
    tqdm>=4.64.0
    click>=8.0.0

[options.packages.find]
where = src

[options.extras_require]
dev =
    pytest>=7.0.0
    pytest-cov>=4.0.0
    black>=23.0.0
    isort>=5.12.0
    flake8>=6.0.0
    mypy>=1.0.0
    pre-commit>=3.0.0
optional =
    flash-attn>=2.0.0
    wandb>=0.15.0

[options.entry_points]
console_scripts =
    chemistry-llm = chemistry_llm.cli.interface:main

[options.package_data]
chemistry_llm = config/*.yaml

# Tool configurations
[tool:pytest]
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
addopts = --strict-markers --strict-config --verbose --tb=short
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests

[coverage:run]
source = src/chemistry_llm
omit =
    */tests/*
    */test_*
    setup.py
    */cli/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[flake8]
max-line-length = 100
extend-ignore = E203, W503
exclude =
    .git,
    __pycache__,
    build,
    dist,
    .eggs,
    *.egg-info,
    .venv,
    .mypy_cache,
    .pytest_cache

[mypy]
python_version = 3.8
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True

[mypy-transformers.*]
ignore_missing_imports = True

[mypy-torch.*]
ignore_missing_imports = True

[mypy-peft.*]
ignore_missing_imports = True

[mypy-tqdm.*]
ignore_missing_imports = True

[mypy-wandb.*]
ignore_missing_imports = True

[mypy-bitsandbytes.*]
ignore_missing_imports = True

[mypy-accelerate.*]
ignore_missing_imports = True

[isort]
profile = black
multi_line_output = 3
line_length = 100
known_first_party = chemistry_llm

[tool:black]
line-length = 100
target-version = py38
include = \.pyi?$